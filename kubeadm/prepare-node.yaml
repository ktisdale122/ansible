---
- hosts: servers
  name: prepare-node
  become: yes

  tasks:
    - name: disable swap
      command:
        cmd: swapoff -a      

   # - name: comment out swap entry in /etc/fstab
   #   lineinfile:
   #     path: /tmp/test-file.txt
   #     regexp: '*^#\1'
   #     state: absent
   #   line: '^#\1'
   #  state: present
   #   backup: yes
   # check_mode: yes

    - name: ensure selinux is set to permissive
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=permissive

    - name: update /etc/hosts file with controlplane and worker node
      blockinfile:
        path: /etc/hosts
        block: | 
          10.62.58.229 catl0xlas24612 controlplane
          10.62.59.59  catl0xlas24613 worker

    - name: install traffic control utility package
      yum:
        name: iproute-tc
        state: present

    - name: install nmap
      yum:
        name: nmap
        state: present

    - name: unmask firewalld
      command:
        cmd: systemctl unmask firewalld

    - name: start firewalld service
      service:
        name: firewalld
        state: started
        enabled: yes
        

- hosts: controlplane
  name: create firewall rules for controlplane node
  become: yes
  tasks:
  
    - name: open controlplane node ports
      firewalld:
        zone: public
        port: "{{ item }}"
        permanent: yes
        state: enabled
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
      loop:
        - 6443/tcp
        - 2379/tcp
        - 2380/tcp
        - 10250/tcp
        - 10251/tcp
        - 10252/tcp

    - name: restart firewalld service
      systemd:
        name: firewalld
        state: reloaded

- hosts: worker
  name: Create firewall rules for worker node
  become: yes
  tasks:

    - name: open worker node ports
      firewalld:
        zone: public
        port: "{{ item }}"
        permanent: yes
        state: enabled
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
      loop:
        - 10250/tcp
        - 30000-32767/tcp
        
    - name: restart firewalld service
      systemd:
        name: firewalld
        state: reloaded

- hosts: servers
  become: yes
  name: prepare nodes
  tasks:

    - name: install cri-o container runtime
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: load modules
      modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: update /etc/sysctl.d/k8s.conf file
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: save changes to sysctl service
      shell:
        "sudo sysctl --system"

   - name: create environment variable for OS
     shell:
       "export VERSION=1.26"

  # installed manually: have to fix 
    - name: download CRI-O runtime
      shell:
        "sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/devel:kubic:libcontainers:stable.repo"

  #  - name: download crio
  #    shell:
  #      "sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/CentOS_8/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo"

    - name: install cri-o
      yum:
        name: cri-o
        state: present
